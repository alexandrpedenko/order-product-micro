services:
  products:
    build:
      context: .
      dockerfile: ./apps/products/Dockerfile
      target: development
    command: npm run start:dev products
    env_file:
      - .env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - postgres

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - postgres
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: npm run start:dev payments
    env_file:
      - .env
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - postgres

  purchasing:
    build:
      context: .
      dockerfile: ./apps/purchasing/Dockerfile
      target: development
    command: npm run start:dev purchasing
    env_file:
      - .env
    ports:
      - '3002:3002'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - postgres

  postgres:
    image: postgres:15.1
    networks:
      - postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file:
      - .env
 
  pgadmin:
    image: dpage/pgadmin4:6.18
    networks:
      - postgres
    ports:
      - "8080:80"
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
